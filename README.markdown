# Mailman Archive Scraper

By Phil Gyford <phil@gyford.com>  
v1.0, 2009-04-05

Latest version is available from <http://github.com/philgyford/mailman-archive-scraper/>

This script will scrape the archive pages generated by the Mailman mailing list manager <http://www.gnu.org/software/mailman/index.html> and republish them as files on the local file system. In addition it can optionally do a number of things:

* Scrape private Mailman archives (if you have a valid email address and password).
* Remove all email addresses from the files (both those in 'phil@gyford.com' and 'phil at gyford dot com' format).
* Replace the URL for the 'more info on this list' links with another.
* Remove one or more levels of quoted emails.
* Search and replace any custom strings you specify.
* Add custom HTML into the <head></head> section of the re-published pages.

Why would you want to do this? A couple of reasons:

1. You want to create your own HTML archive of a mailing list hosted elsewhere.

2. You want to create a public version of a private archive. We hope you have permission to do this of course. The tools mentioned above allow you to do things like anonymise names and phone numbers, remove email addresses, etc.

There may be more efficient ways to do this if you have access to the database in which the Mailman archive is stored. If you don't, and can only access the web pages, this script is for you.

**There are caveats.** I have only tested this with a couple of Mailman archives (one private, one public) and it seems to work fine. I'm sure that some people will find problems with different installations -- unscrapeable HTML, different URLs and filepaths, etc. Feel free to suggest fixes.


## Installation

1. Put the directory containing the MailmanArchiveScraper.py script somewhere you want to run it from.
2. Make a copy of the MailmanArchiveScraper-example.cfg file and call it MailmanArchiveScraper.cfg.
3. Set the configuration options in that file (see below).
4. Install the required extra python modules:
	* BeautifulSoup <http://www.crummy.com/software/BeautifulSoup/>
	* ClientForm <http://wwwsearch.sourceforge.net/ClientForm/>
	* Mechanize <http://wwwsearch.sourceforge.net/mechanize/>
5. Make sure the MailmanArchiveScraper.py script is executable (chmod +x).


## Configuration

There is help in the configuration file for each setting. The minimum things you'll need to set are:

1. domain -- The domain name that your Mailman pages are on.
2. list_name -- Name of your mailing list.
3. email and password -- Required if your Mailman archive is password protected.
4. publish_dir -- The path to the local directory the files should be republished to.


## Planned additions

* An RSS feed of recent emails.
